
/*
gvn := :(a: u16) {
    b := 3 + a
    c := a
    d := c + 3

    e: u16
    f: u16

    f = c + d + 1
    e = a + d + 1

    unused(e)
    unused(f)
    unused(b)
}

crit_edge := :() {
    a := 1
    if a {
	a = 2
    }
    a = 3
    unused(a)
}

no_gvn := :(a: u16) {
    b := a
    if a {
       b = 3
    }
    c := a + 5
    d := b + 5
    unused(c + d)
}
*/

three := :() -> u16 {
  ret 3
}

test := :(a: u16) -> u16 {
    b := 2
    c := a + b
    if a + b {
        // c = a + 3
        // unused(c)
    } else {
        c = a + 3 //three()
        unused(c)
    }
    b = a
    d := b + 3
    unused(d)
    d = c
    ret d
}

/*
example := :(arg: u16) {
    a := arg
    while a + 1 {
        b := a + 1

	if arg {
	    c := a + b
	    d := c
	    e := a + d
	    unused(e)
	} else {
	    a = b + 1
	}

	f := a + b
	g := a + f
	h := arg
	i := f + h
	k := i + b
	unused(g)
	unused(k)
    }
}
*/
