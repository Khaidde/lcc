import "math"

import "io"

// val: u16 = math.area_sphere(3)

// thing: string = "lol"

// test = runtime_func("lolk")
// test = test2

// cool = io.print(3)
// other = runt

/*
point = struct {
  x: u16
  y: u16
}
other = point

u8 : type = #extern
u16: type = #extern

impl + for u8 = :(other: u8) => #add(self, other, 8)

u16.+ = :(b: u16) => #add(self, b, 16)
*/

main := :() -> string {
  io.print("rand")
  i := 2


  if i + i {
    i = 2
    ret "asdf"
  } else if i - 1 {
    i = 3
    ret "asdf"
  } else {
    i = 4
    if i {
      ret "asdf"
    } else {
      ret "asdf"
    }
  }
  ret "asdf"
}
val := 2

/*
callCallback = :(callback: (u16, u16) -> u16) -> string {
  callback(4, 5)
  ret "lol"
}
asdf = callCallback(:(a: u16, b: u16) => (:(a: u16) => a)(a) + b)
factorial = :(n: u16) => factorial(n - 1)
*/