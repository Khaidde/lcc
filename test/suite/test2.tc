import lib

thing = :(a: u16) => 3
func = :() -> u16 {}

main = -func()
main : (u16) = :(a: u16) {}

test = add(3, 4)
add = :(a: u16, b: u16) => a + b

// recur : () -> u16 = recur()
// test = add(a, b)

/*
main = :(argc: u32, argv: u32) -> u64 {
  asdf : u32 = 5 + this & 7

  if coolcond {
    asdf2 = 5 & *this - 7
  } else if othercond {
    asdf + @asdf2 - 0
  } else {
    tat
  }

  while @0x6000 + 3 {
    asdf = 2
  }

  asdf + @asdf2 - 0
  add = :(a:u32, b:u32) -> u32 => a + b
}
*/